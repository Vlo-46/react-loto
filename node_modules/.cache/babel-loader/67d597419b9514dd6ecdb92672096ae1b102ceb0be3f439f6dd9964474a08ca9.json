{"ast":null,"code":"var _jsxFileName = \"/home/volodya-work/Desktop/react-loto/src/pages/Loto.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Box, Grid, Alert, Button } from '@mui/material';\nimport { createTickets, generateExpectedNumbers } from \"../helpers/loto\";\nimport { useState } from \"react\";\nimport Tickets from \"../components/loto/Tickets\";\nimport BlockOfExpectedNumbers from \"../components/loto/BlockOfExpectedNumbers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Loto() {\n  _s();\n  const result = createTickets();\n  const generatedNumbers = generateExpectedNumbers();\n  const [schema] = useState(result);\n  const [clonedData, setClonedData] = useState(schema);\n  const [prevNumber, setPrevNumber] = useState(null);\n  const [intervalId, setIntervalId] = useState(null);\n  const [expectedNumbers, setExpectedNumbers] = useState(generatedNumbers);\n  const [startGame, setStartGame] = useState(false);\n  const [endGame, setEndgame] = useState(null);\n  useEffect(() => {\n    // Connect to the socket when the component mounts\n    const socket = io('http://localhost:5000');\n    setSocket(socket);\n\n    // Cleanup function to disconnect socket when the component unmounts\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    if (startGame && !endGame) {\n      const interval = setInterval(() => {\n        setExpectedNumbers(prevNumbers => {\n          const newNumbers = [...prevNumbers];\n          const shiftedNumber = newNumbers.shift();\n          setPrevNumber(shiftedNumber);\n          return newNumbers;\n        });\n      }, 4000);\n      setIntervalId(interval);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [startGame]);\n  useEffect(() => {\n    checkNotMarkedItems();\n  }, [prevNumber]);\n  const handleStartGame = () => {\n    setStartGame(true);\n  };\n  const setSelected = cub => event => {\n    if (!startGame || endGame || !cub) return;\n    const foundCub = expectedNumbers.slice(0, 1).find(num => num === cub.num);\n    if (!foundCub) return;\n    const updatedData = clonedData.map(data => data.map(item => item.map(i => i && i.num === cub.num ? {\n      ...i,\n      selected: true\n    } : i)));\n    setClonedData(updatedData);\n  };\n  const checkNotMarkedItems = () => {\n    if (!expectedNumbers.length) {\n      setEndgame('Game over. You lose!');\n    }\n    const updatedData = clonedData.map(data => {\n      checkWinner(data);\n      return data.map(item => item.map(i => i && i.num === prevNumber && !i.selected ? {\n        ...i,\n        notMarked: true\n      } : i));\n    });\n    setClonedData(updatedData);\n  };\n  const checkWinner = data => {\n    const ticket = data.flatMap(tickets => tickets).filter(item => item);\n    const isAllItemsSelected = ticket.every(item => item && item.selected);\n    if (isAllItemsSelected) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n      setEndgame('Game over. You won!');\n    }\n  };\n  const renderTickets = subGrid => /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 1,\n    columns: 9,\n    sx: {\n      mb: 5\n    },\n    children: subGrid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(Tickets, {\n      row: row,\n      setSelected: setSelected\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 7\n  }, this);\n  const renderSchema = array => /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: array.map((subGrid, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: renderTickets(subGrid)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 5,\n        mb: 5\n      },\n      children: [endGame ? /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"filled\",\n        severity: \"info\",\n        sx: {\n          mb: 5\n        },\n        children: endGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 23\n      }, this) : null, !startGame ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        spacing: 1,\n        columns: 3,\n        direction: \"row\",\n        justifyContent: \"center\",\n        sx: {\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"small\",\n          onClick: handleStartGame,\n          children: \"START\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(BlockOfExpectedNumbers, {\n        expectedNumbers: expectedNumbers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 23\n      }, this), renderSchema(clonedData)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n_s(Loto, \"ysGZv23gyeXQrnpMn32nxfPxFyQ=\");\n_c = Loto;\nvar _c;\n$RefreshReg$(_c, \"Loto\");","map":{"version":3,"names":["React","useEffect","Box","Grid","Alert","Button","createTickets","generateExpectedNumbers","useState","Tickets","BlockOfExpectedNumbers","jsxDEV","_jsxDEV","Fragment","_Fragment","Loto","_s","result","generatedNumbers","schema","clonedData","setClonedData","prevNumber","setPrevNumber","intervalId","setIntervalId","expectedNumbers","setExpectedNumbers","startGame","setStartGame","endGame","setEndgame","socket","io","setSocket","disconnect","interval","setInterval","prevNumbers","newNumbers","shiftedNumber","shift","clearInterval","checkNotMarkedItems","handleStartGame","setSelected","cub","event","foundCub","slice","find","num","updatedData","map","data","item","i","selected","length","checkWinner","notMarked","ticket","flatMap","tickets","filter","isAllItemsSelected","every","renderTickets","subGrid","container","spacing","columns","sx","mb","children","row","rowIndex","fileName","_jsxFileName","lineNumber","columnNumber","renderSchema","array","index","p","variant","severity","direction","justifyContent","size","onClick","_c","$RefreshReg$"],"sources":["/home/volodya-work/Desktop/react-loto/src/pages/Loto.tsx"],"sourcesContent":["import React, {MouseEvent, useEffect} from 'react'\nimport {Box, Grid, Alert, Button} from '@mui/material'\nimport {createTickets, generateExpectedNumbers, ICub} from \"../helpers/loto\";\nimport {useState} from \"react\";\nimport Tickets from \"../components/loto/Tickets\";\nimport BlockOfExpectedNumbers from \"../components/loto/BlockOfExpectedNumbers\";\n\nexport default function Loto() {\n    const result = createTickets()\n    const generatedNumbers = generateExpectedNumbers();\n\n    const [schema] = useState(result)\n    const [clonedData, setClonedData] = useState(schema)\n    const [prevNumber, setPrevNumber] = useState<number | null>(null)\n    const [intervalId, setIntervalId] = useState<any>(null);\n    const [expectedNumbers, setExpectedNumbers] = useState<number[]>(generatedNumbers);\n    const [startGame, setStartGame] = useState<boolean>(false)\n    const [endGame, setEndgame] = useState<null | string>(null)\n\n    useEffect(() => {\n        // Connect to the socket when the component mounts\n        const socket = io('http://localhost:5000');\n        setSocket(socket);\n\n        // Cleanup function to disconnect socket when the component unmounts\n        return () => {\n            socket.disconnect();\n        };\n    }, []);\n\n    useEffect(() => {\n        if (startGame && !endGame) {\n            const interval = setInterval(() => {\n                setExpectedNumbers((prevNumbers) => {\n                    const newNumbers = [...prevNumbers];\n                    const shiftedNumber = newNumbers.shift();\n\n                    setPrevNumber(shiftedNumber as number);\n                    return newNumbers;\n                });\n            }, 4000);\n\n            setIntervalId(interval);\n\n            return () => {\n                clearInterval(interval);\n            };\n        }\n    }, [startGame]);\n\n    useEffect(() => {\n        checkNotMarkedItems();\n    }, [prevNumber]);\n\n    const handleStartGame = () => {\n        setStartGame(true)\n    }\n\n    const setSelected = (cub: ICub | undefined) => (event: MouseEvent<HTMLElement>) => {\n        if (!startGame || endGame || !cub) return;\n\n        const foundCub = expectedNumbers.slice(0, 1).find((num: number) => num === (cub.num as number))\n        if (!foundCub) return;\n\n        const updatedData = clonedData.map((data: any) =>\n          data.map((item: ICub[]) =>\n            item.map((i: ICub) =>\n              i && i.num === cub.num ? {...i, selected: true} : i\n            )\n          )\n        );\n        setClonedData(updatedData)\n    }\n\n    const checkNotMarkedItems = (): void => {\n        if (!expectedNumbers.length) {\n            setEndgame('Game over. You lose!')\n        }\n\n        const updatedData = clonedData.map((data: any) => {\n            checkWinner(data)\n            return data.map((item: ICub[]) =>\n              item.map((i: ICub) =>\n                i && i.num === prevNumber && !i.selected ? {...i, notMarked: true} : i\n              )\n            )\n        });\n        setClonedData(updatedData)\n    };\n\n    const checkWinner = (data: any) => {\n        const ticket = data.flatMap((tickets: any) => tickets).filter((item: ICub) => item);\n        const isAllItemsSelected = ticket.every((item: ICub) => item && item.selected);\n\n        if (isAllItemsSelected) {\n            clearInterval(intervalId);\n            setIntervalId(null);\n            setEndgame('Game over. You won!')\n        }\n    };\n\n    const renderTickets = (subGrid: []) => (\n      <Grid container spacing={1} columns={9} sx={{mb: 5}}>\n          {subGrid.map((row: [], rowIndex: number) => (\n            <Tickets key={rowIndex} row={row} setSelected={setSelected}/>\n          ))}\n      </Grid>\n    );\n\n    const renderSchema = (array: any) => (\n      <Grid container spacing={2}>\n          {array.map((subGrid: [], index: number) => (\n            <Grid item key={index}>\n                {renderTickets(subGrid)}\n            </Grid>\n          ))}\n      </Grid>\n    );\n\n    return (\n      <>\n          <Box sx={{p: 5, mb: 5}}>\n              {\n                  endGame\n                    ? <Alert variant=\"filled\" severity=\"info\" sx={{mb: 5}}>\n                        {endGame}\n                    </Alert>\n                    : null\n              }\n              {\n                  !startGame\n                    ? <Grid container item spacing={1} columns={3} direction=\"row\"\n                            justifyContent=\"center\" sx={{mb: 2}}>\n                        <Button variant=\"outlined\" size=\"small\" onClick={handleStartGame}>START</Button>\n                    </Grid>\n                    : <BlockOfExpectedNumbers expectedNumbers={expectedNumbers}/>\n              }\n              {renderSchema(clonedData)}\n          </Box>\n      </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}