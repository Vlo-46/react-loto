{"ast":null,"code":"const allowedItems = Array.from(Array(99).keys()).slice(1);\nconst ticketsLength = 3;\nconst allowedItemsInOneTicket = 15;\nfunction createEmptyTicketsTickets() {\n  let array = [];\n  for (let i = 0; i < ticketsLength; i++) {\n    array.push([]);\n  }\n  return array;\n}\nexport function createTickets() {\n  let tickets = [];\n  const schema = createEmptyTicketsTickets();\n  schema.forEach(ticket => {\n    let array = [];\n    for (let i = 0; i < allowedItemsInOneTicket; i++) {\n      array.push(allowedItems[Math.floor(Math.random() * 99)]);\n    }\n    ticket = shuffleArray(array);\n    tickets.push(ticket);\n  });\n  return parseToCorrectStructure(schema);\n}\nfunction parseToCorrectStructure(tickets) {\n  const generateColumn = () => {\n    const column = Array.from({\n      length: 5\n    }, () => ({\n      notMarked: false,\n      selected: false,\n      num: allowedItems[Math.floor(Math.random() * 99)]\n    }));\n    return shuffleArray(column).sort((a, b) => a.num - b.num);\n  };\n  const changeTicketStructure = ticket => {\n    return ticket.map(col => changeStructure(col));\n  };\n  return tickets.map(() => {\n    const col1 = generateColumn();\n    const col2 = generateColumn();\n    const col3 = generateColumn();\n    const ticket = [col1, col2, col3];\n    return changeTicketStructure(ticket);\n  });\n}\nfunction changeStructure(col) {\n  const newArray = Array(10).fill(undefined);\n  col.forEach(item => {\n    const index = Math.floor(item.num / 10);\n    if (index >= 0 && index < 10) {\n      newArray[index] = item;\n    }\n  });\n  return newArray;\n}\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\nexport function generateExpectedNumbers() {\n  const generatedNumbers = [];\n  for (let i = 1; i < 100; i++) {\n    generatedNumbers.push(i);\n  }\n  return shuffleArray(generatedNumbers);\n}","map":{"version":3,"names":["allowedItems","Array","from","keys","slice","ticketsLength","allowedItemsInOneTicket","createEmptyTicketsTickets","array","i","push","createTickets","tickets","schema","forEach","ticket","Math","floor","random","shuffleArray","parseToCorrectStructure","generateColumn","column","length","notMarked","selected","num","sort","a","b","changeTicketStructure","map","col","changeStructure","col1","col2","col3","newArray","fill","undefined","item","index","j","generateExpectedNumbers","generatedNumbers"],"sources":["/home/volodya-work/Desktop/project-loto/react-loto/src/helpers/loto.ts"],"sourcesContent":["const allowedItems: number[] = Array.from(Array(99).keys()).slice(1)\nconst ticketsLength: number = 3;\nconst allowedItemsInOneTicket: number = 15;\n\nfunction createEmptyTicketsTickets() {\n    let array: any = []\n    for (let i = 0; i < ticketsLength; i++) {\n        array.push([])\n    }\n\n    return array\n}\n\nexport function createTickets() {\n    let tickets: any = []\n    const schema = createEmptyTicketsTickets()\n\n    schema.forEach((ticket: any) => {\n        let array = []\n        for (let i = 0; i < allowedItemsInOneTicket; i++) {\n            array.push(allowedItems[Math.floor(Math.random() * 99)])\n        }\n        ticket = shuffleArray(array)\n        tickets.push(ticket)\n    })\n\n    return parseToCorrectStructure(schema)\n}\n\nfunction parseToCorrectStructure(tickets: any[]) {\n    const generateColumn = () => {\n        const column = Array.from({length: 5}, () => ({\n            notMarked: false,\n            selected: false,\n            num: allowedItems[Math.floor(Math.random() * 99)]\n        }));\n\n        return shuffleArray(column).sort((a, b) => a.num - b.num);\n    };\n\n    const changeTicketStructure = (ticket: any[]) => {\n        return ticket.map((col) => changeStructure(col));\n    };\n\n    return tickets.map(() => {\n        const col1 = generateColumn();\n        const col2 = generateColumn();\n        const col3 = generateColumn();\n\n        const ticket = [col1, col2, col3];\n\n        return changeTicketStructure(ticket);\n    });\n}\n\nfunction changeStructure(col: any) {\n    const newArray: any[] = Array(10).fill(undefined);\n\n    col.forEach((item: any) => {\n        const index = Math.floor(item.num / 10);\n        if (index >= 0 && index < 10) {\n            newArray[index] = item;\n        }\n    });\n\n    return newArray\n}\n\nfunction shuffleArray(array: any[]): any[] {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n\n    return array;\n}\n\nexport function generateExpectedNumbers(): number[] {\n    const generatedNumbers = []\n    for (let i = 1; i < 100; i++) {\n        generatedNumbers.push(i)\n    }\n    return shuffleArray(generatedNumbers)\n}\n\nexport interface ICub {\n    notMarked: boolean\n    selected: boolean\n    num: number\n}"],"mappings":"AAAA,MAAMA,YAAsB,GAAGC,KAAK,CAACC,IAAI,CAACD,KAAK,CAAC,EAAE,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;AACpE,MAAMC,aAAqB,GAAG,CAAC;AAC/B,MAAMC,uBAA+B,GAAG,EAAE;AAE1C,SAASC,yBAAyBA,CAAA,EAAG;EACjC,IAAIC,KAAU,GAAG,EAAE;EACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,aAAa,EAAEI,CAAC,EAAE,EAAE;IACpCD,KAAK,CAACE,IAAI,CAAC,EAAE,CAAC;EAClB;EAEA,OAAOF,KAAK;AAChB;AAEA,OAAO,SAASG,aAAaA,CAAA,EAAG;EAC5B,IAAIC,OAAY,GAAG,EAAE;EACrB,MAAMC,MAAM,GAAGN,yBAAyB,CAAC,CAAC;EAE1CM,MAAM,CAACC,OAAO,CAAEC,MAAW,IAAK;IAC5B,IAAIP,KAAK,GAAG,EAAE;IACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,uBAAuB,EAAEG,CAAC,EAAE,EAAE;MAC9CD,KAAK,CAACE,IAAI,CAACV,YAAY,CAACgB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC5D;IACAH,MAAM,GAAGI,YAAY,CAACX,KAAK,CAAC;IAC5BI,OAAO,CAACF,IAAI,CAACK,MAAM,CAAC;EACxB,CAAC,CAAC;EAEF,OAAOK,uBAAuB,CAACP,MAAM,CAAC;AAC1C;AAEA,SAASO,uBAAuBA,CAACR,OAAc,EAAE;EAC7C,MAAMS,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,MAAM,GAAGrB,KAAK,CAACC,IAAI,CAAC;MAACqB,MAAM,EAAE;IAAC,CAAC,EAAE,OAAO;MAC1CC,SAAS,EAAE,KAAK;MAChBC,QAAQ,EAAE,KAAK;MACfC,GAAG,EAAE1B,YAAY,CAACgB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,OAAOC,YAAY,CAACG,MAAM,CAAC,CAACK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACF,GAAG,GAAGG,CAAC,CAACH,GAAG,CAAC;EAC7D,CAAC;EAED,MAAMI,qBAAqB,GAAIf,MAAa,IAAK;IAC7C,OAAOA,MAAM,CAACgB,GAAG,CAAEC,GAAG,IAAKC,eAAe,CAACD,GAAG,CAAC,CAAC;EACpD,CAAC;EAED,OAAOpB,OAAO,CAACmB,GAAG,CAAC,MAAM;IACrB,MAAMG,IAAI,GAAGb,cAAc,CAAC,CAAC;IAC7B,MAAMc,IAAI,GAAGd,cAAc,CAAC,CAAC;IAC7B,MAAMe,IAAI,GAAGf,cAAc,CAAC,CAAC;IAE7B,MAAMN,MAAM,GAAG,CAACmB,IAAI,EAAEC,IAAI,EAAEC,IAAI,CAAC;IAEjC,OAAON,qBAAqB,CAACf,MAAM,CAAC;EACxC,CAAC,CAAC;AACN;AAEA,SAASkB,eAAeA,CAACD,GAAQ,EAAE;EAC/B,MAAMK,QAAe,GAAGpC,KAAK,CAAC,EAAE,CAAC,CAACqC,IAAI,CAACC,SAAS,CAAC;EAEjDP,GAAG,CAAClB,OAAO,CAAE0B,IAAS,IAAK;IACvB,MAAMC,KAAK,GAAGzB,IAAI,CAACC,KAAK,CAACuB,IAAI,CAACd,GAAG,GAAG,EAAE,CAAC;IACvC,IAAIe,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAG,EAAE,EAAE;MAC1BJ,QAAQ,CAACI,KAAK,CAAC,GAAGD,IAAI;IAC1B;EACJ,CAAC,CAAC;EAEF,OAAOH,QAAQ;AACnB;AAEA,SAASlB,YAAYA,CAACX,KAAY,EAAS;EACvC,KAAK,IAAIC,CAAC,GAAGD,KAAK,CAACe,MAAM,GAAG,CAAC,EAAEd,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACvC,MAAMiC,CAAC,GAAG1B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIT,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAACD,KAAK,CAACC,CAAC,CAAC,EAAED,KAAK,CAACkC,CAAC,CAAC,CAAC,GAAG,CAAClC,KAAK,CAACkC,CAAC,CAAC,EAAElC,KAAK,CAACC,CAAC,CAAC,CAAC;EAC/C;EAEA,OAAOD,KAAK;AAChB;AAEA,OAAO,SAASmC,uBAAuBA,CAAA,EAAa;EAChD,MAAMC,gBAAgB,GAAG,EAAE;EAC3B,KAAK,IAAInC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAE;IAC1BmC,gBAAgB,CAAClC,IAAI,CAACD,CAAC,CAAC;EAC5B;EACA,OAAOU,YAAY,CAACyB,gBAAgB,CAAC;AACzC"},"metadata":{},"sourceType":"module","externalDependencies":[]}